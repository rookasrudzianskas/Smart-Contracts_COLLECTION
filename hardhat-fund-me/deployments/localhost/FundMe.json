{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x04a32a2a4f2dedeec5677603164f4c5b6dd88c49bbffac23ce6624f021b89233",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1031626",
    "logsBloom": "0x
    "blockHash": "0xd82ee03b7c548f5c2565df25f46dd6e2645e4d9b14f1d300a7a1c2a1361a7665",
    "transactionHash": "0x04a32a2a4f2dedeec5677603164f4c5b6dd88c49bbffac23ce6624f021b89233",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1031626",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "fe14312684fc8ce15c9963b0c79a0051",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Rokas Rudzianskas\",\"details\":\"This implements price feeds from Chainlink\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is a demo of a crowd funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Pragma\\npragma solidity ^0.8.8;\\n// Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// Error Codes\\nerror FundMe__NotOwner();\\n\\n// Interfaces, libraries, and contracts\\n\\n// NAT aspect\\n/** @title A contract for crowd funding\\n *  @author Rokas Rudzianskas\\n *  @notice This contract is a demo of a crowd funding contract\\n *  @dev This implements price feeds from Chainlink\\n*/\\ncontract FundMe {\\n    // Type declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables!\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Modifiers\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions \\ud83d\\udc47\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address s_funders = s_funders[funderIndex];\\n            s_addressToAmountFunded[s_funders] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can not be in memory sorry\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns(address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x7e63e85af0febf8bcda111ced96ba9a0d211c5a315018eea686a54f945372fbe\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x7467f72de3133b304279c44031336f8535de6eca34a84131ac4fc597423d94bb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012d1380380620012d1833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61114b62000186600039600081816101f00152818161043f015281816105c901526107bf015261114b6000f3fe60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a83565b6101a6565b6040516100b49190610ac9565b60405180910390f35b3480156100c957600080fd5b506100d26101ee565b005b3480156100e057600080fd5b506100e961042e565b6040516100f69190610ac9565b60405180910390f35b34801561010b57600080fd5b5061011461043b565b6040516101219190610af3565b60405180910390f35b34801561013657600080fd5b5061013f610463565b60405161014c9190610b6d565b60405180910390f35b61015d61048d565b005b6101676105c7565b005b34801561017557600080fd5b50610190600480360381019061018b9190610bb4565b610855565b60405161019d9190610af3565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610273576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561031e5760006001828154811061029957610298610be1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061031690610c3f565b915050610276565b50600067ffffffffffffffff81111561033a57610339610c88565b5b6040519080825280602002602001820160405280156103685781602001602082028036833780820191505090505b506001908051906020019061037e929190610979565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a590610ce8565b60006040518083038185875af1925050503d80600081146103e2576040519150601f19603f3d011682016040523d82523d6000602084013e6103e7565b606091505b505090508061042b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042290610d5a565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104cc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089d90919063ffffffff16565b101561050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490610dc6565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055b9190610de6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610686575b5050505050905060005b815181101561075a5760008282815181106106f8576106f7610be1565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075290610c3f565b9150506106da565b50600067ffffffffffffffff81111561077657610775610c88565b5b6040519080825280602002602001820160405280156107a45781602001602082028036833780820191505090505b50600190805190602001906107ba929190610979565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080190610ce8565b60006040518083038185875af1925050503d806000811461083e576040519150601f19603f3d011682016040523d82523d6000602084013e610843565b606091505b505090508061085157600080fd5b5050565b60006001828154811061086b5761086a610be1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a9836108d9565b90506000670de0b6b3a764000085836108c29190610e3c565b6108cc9190610ec5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092257600080fd5b505afa158015610936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095a9190610f83565b5050509150506402540be400816109719190610ffe565b915050919050565b8280548282559060005260206000209081019282156109f2579160200282015b828111156109f15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610999565b5b5090506109ff9190610a03565b5090565b5b80821115610a1c576000816000905550600101610a04565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5082610a25565b9050919050565b610a6081610a45565b8114610a6b57600080fd5b50565b600081359050610a7d81610a57565b92915050565b600060208284031215610a9957610a98610a20565b5b6000610aa784828501610a6e565b91505092915050565b6000819050919050565b610ac381610ab0565b82525050565b6000602082019050610ade6000830184610aba565b92915050565b610aed81610a45565b82525050565b6000602082019050610b086000830184610ae4565b92915050565b6000819050919050565b6000610b33610b2e610b2984610a25565b610b0e565b610a25565b9050919050565b6000610b4582610b18565b9050919050565b6000610b5782610b3a565b9050919050565b610b6781610b4c565b82525050565b6000602082019050610b826000830184610b5e565b92915050565b610b9181610ab0565b8114610b9c57600080fd5b50565b600081359050610bae81610b88565b92915050565b600060208284031215610bca57610bc9610a20565b5b6000610bd884828501610b9f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c4a82610ab0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7d57610c7c610c10565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cd2600083610cb7565b9150610cdd82610cc2565b600082019050919050565b6000610cf382610cc5565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d44600b83610cfd565b9150610d4f82610d0e565b602082019050919050565b60006020820190508181036000830152610d7381610d37565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610db0601b83610cfd565b9150610dbb82610d7a565b602082019050919050565b60006020820190508181036000830152610ddf81610da3565b9050919050565b6000610df182610ab0565b9150610dfc83610ab0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3157610e30610c10565b5b828201905092915050565b6000610e4782610ab0565b9150610e5283610ab0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8b57610e8a610c10565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ed082610ab0565b9150610edb83610ab0565b925082610eeb57610eea610e96565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f1581610ef6565b8114610f2057600080fd5b50565b600081519050610f3281610f0c565b92915050565b6000819050919050565b610f4b81610f38565b8114610f5657600080fd5b50565b600081519050610f6881610f42565b92915050565b600081519050610f7d81610b88565b92915050565b600080600080600060a08688031215610f9f57610f9e610a20565b5b6000610fad88828901610f23565b9550506020610fbe88828901610f59565b9450506040610fcf88828901610f6e565b9350506060610fe088828901610f6e565b9250506080610ff188828901610f23565b9150509295509295909350565b600061100982610f38565b915061101483610f38565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561105357611052610c10565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110905761108f610c10565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110cd576110cc610c10565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561110a57611109610c10565b5b82820290509291505056fea2646970667358221220b3c4f89aec13f136b2f5900ac8a89f05f3798c44cbe6820a176c88a56a6ca96564736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639e87a5cd1161004e5780639e87a5cd1461012a578063b60d428814610155578063be2693f01461015f578063d7b4750c146101695761007b565b80630343fb25146100805780633ccfd60b146100bd5780636b69a592146100d4578063893d20e8146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610a83565b6101a6565b6040516100b49190610ac9565b60405180910390f35b3480156100c957600080fd5b506100d26101ee565b005b3480156100e057600080fd5b506100e961042e565b6040516100f69190610ac9565b60405180910390f35b34801561010b57600080fd5b5061011461043b565b6040516101219190610af3565b60405180910390f35b34801561013657600080fd5b5061013f610463565b60405161014c9190610b6d565b60405180910390f35b61015d61048d565b005b6101676105c7565b005b34801561017557600080fd5b50610190600480360381019061018b9190610bb4565b610855565b60405161019d9190610af3565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610273576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561031e5760006001828154811061029957610298610be1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061031690610c3f565b915050610276565b50600067ffffffffffffffff81111561033a57610339610c88565b5b6040519080825280602002602001820160405280156103685781602001602082028036833780820191505090505b506001908051906020019061037e929190610979565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103a590610ce8565b60006040518083038185875af1925050503d80600081146103e2576040519150601f19603f3d011682016040523d82523d6000602084013e6103e7565b606091505b505090508061042b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042290610d5a565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006104cc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089d90919063ffffffff16565b101561050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050490610dc6565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461055b9190610de6565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106d057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610686575b5050505050905060005b815181101561075a5760008282815181106106f8576106f7610be1565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075290610c3f565b9150506106da565b50600067ffffffffffffffff81111561077657610775610c88565b5b6040519080825280602002602001820160405280156107a45781602001602082028036833780820191505090505b50600190805190602001906107ba929190610979565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080190610ce8565b60006040518083038185875af1925050503d806000811461083e576040519150601f19603f3d011682016040523d82523d6000602084013e610843565b606091505b505090508061085157600080fd5b5050565b60006001828154811061086b5761086a610be1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a9836108d9565b90506000670de0b6b3a764000085836108c29190610e3c565b6108cc9190610ec5565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092257600080fd5b505afa158015610936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095a9190610f83565b5050509150506402540be400816109719190610ffe565b915050919050565b8280548282559060005260206000209081019282156109f2579160200282015b828111156109f15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610999565b5b5090506109ff9190610a03565b5090565b5b80821115610a1c576000816000905550600101610a04565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5082610a25565b9050919050565b610a6081610a45565b8114610a6b57600080fd5b50565b600081359050610a7d81610a57565b92915050565b600060208284031215610a9957610a98610a20565b5b6000610aa784828501610a6e565b91505092915050565b6000819050919050565b610ac381610ab0565b82525050565b6000602082019050610ade6000830184610aba565b92915050565b610aed81610a45565b82525050565b6000602082019050610b086000830184610ae4565b92915050565b6000819050919050565b6000610b33610b2e610b2984610a25565b610b0e565b610a25565b9050919050565b6000610b4582610b18565b9050919050565b6000610b5782610b3a565b9050919050565b610b6781610b4c565b82525050565b6000602082019050610b826000830184610b5e565b92915050565b610b9181610ab0565b8114610b9c57600080fd5b50565b600081359050610bae81610b88565b92915050565b600060208284031215610bca57610bc9610a20565b5b6000610bd884828501610b9f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c4a82610ab0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c7d57610c7c610c10565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cd2600083610cb7565b9150610cdd82610cc2565b600082019050919050565b6000610cf382610cc5565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d44600b83610cfd565b9150610d4f82610d0e565b602082019050919050565b60006020820190508181036000830152610d7381610d37565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610db0601b83610cfd565b9150610dbb82610d7a565b602082019050919050565b60006020820190508181036000830152610ddf81610da3565b9050919050565b6000610df182610ab0565b9150610dfc83610ab0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3157610e30610c10565b5b828201905092915050565b6000610e4782610ab0565b9150610e5283610ab0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e8b57610e8a610c10565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ed082610ab0565b9150610edb83610ab0565b925082610eeb57610eea610e96565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f1581610ef6565b8114610f2057600080fd5b50565b600081519050610f3281610f0c565b92915050565b6000819050919050565b610f4b81610f38565b8114610f5657600080fd5b50565b600081519050610f6881610f42565b92915050565b600081519050610f7d81610b88565b92915050565b600080600080600060a08688031215610f9f57610f9e610a20565b5b6000610fad88828901610f23565b9550506020610fbe88828901610f59565b9450506040610fcf88828901610f6e565b9350506060610fe088828901610f6e565b9250506080610ff188828901610f23565b9150509295509295909350565b600061100982610f38565b915061101483610f38565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561105357611052610c10565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110905761108f610c10565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110cd576110cc610c10565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561110a57611109610c10565b5b82820290509291505056fea2646970667358221220b3c4f89aec13f136b2f5900ac8a89f05f3798c44cbe6820a176c88a56a6ca96564736f6c63430008080033",
  "devdoc": {
    "author": "Rokas Rudzianskas",
    "details": "This implements price feeds from Chainlink",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is a demo of a crowd funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}